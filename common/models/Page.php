<?php

namespace common\models;

use backend\components\localization\AdminLocalizator;
use Yii;

/**
 * This is the model class for table "pages".
 *
 * @property int $id
 * @property string $main_slug
 * @property int $status
 * @property int $order
 * @property int $parent_id
 * @property string $updated_at
 * @property string $created_at
 *
 * @property PageTranslation[] $pageTranslation
 */
class Page extends \yii\db\ActiveRecord
{
    /**
     * {@inheritdoc}
     */
    public static function tableName()
    {
        return 'pages';
    }

    /**
     * {@inheritdoc}
     */
    public function rules()
    {
        return [
            [['status', 'order', 'parent_id'], 'integer'],
            [['main_slug'], 'string'],
            [['updated_at', 'created_at'], 'safe'],
        ];
    }

    /**
     * {@inheritdoc}
     */
    public function attributeLabels()
    {
        return [
            'id' => Yii::t('app', 'ID'),
            'status' => Yii::t('app', 'Status'),
            'order' => Yii::t('app', 'Order'),
            'updated_at' => Yii::t('app', 'Updated At'),
            'created_at' => Yii::t('app', 'Created At'),
        ];
    }


    /**
     * @return \yii\db\ActiveQuery
     */
    public function getPagesTranslations()
    {
        return $this->hasMany(PageTranslation::class, ['page_id' => 'id']);
    }

    /**
     * @param $id
     * @return array|null|\yii\db\ActiveRecord
     */
    public function getPagesTranslation($id)
    {
        $lang = AdminLocalizator::getLanguage();
        return PageTranslation::find()->where(['page_id' => $id, 'lang' => $lang])->one();
    }

    public function getPageTranslationRu()
    {

        return $this->hasOne(PageTranslation::class, ['page_id' => 'id'])->where(['lang' => 'ru']);
    }

    /**
     * @return \yii\db\ActiveQuery
     */
    public function getPageTranslationFrontend()
    {
        $lang = Lang::getCurrent()->url;
        return $this->hasOne(PageTranslation::class, ['page_id' => 'id'])->where(['lang' => $lang]);
    }

    /**
     * @param bool $value
     */
    public function setIsNewRecord($value)
    {
        parent::setIsNewRecord($value); // TODO: Change the autogenerated stub
    }
}
